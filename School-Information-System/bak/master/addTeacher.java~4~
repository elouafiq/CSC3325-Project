package master;
import database.*;


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Vector;
import java.util.GregorianCalendar;

/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2006</p>
 * <p>Company: </p>
 * @author not attributable
 * @version 1.0
 */

public class addTeacher extends JFrame {
  Vector lists = new Vector();
  JScrollPane js = new JScrollPane();
  JPanel jPanel1 = new JPanel();
  JLabel jLabel8 = new JLabel();
  JLabel jLabel4 = new JLabel();
  JTextField jTextField6 = new JTextField();
  JTextField jTextField9 = new JTextField();
  JTextField jTextField10 = new JTextField();
  JLabel jLabel1 = new JLabel();
  JTextField jTextField7 = new JTextField();
  JLabel jLabel3 = new JLabel();
  JTextField jTextField12 = new JTextField();
  JLabel jLabel7 = new JLabel();
  JTextField jTextField3 = new JTextField();
  JLabel jLabel2 = new JLabel();
  JTextField jTextField2 = new JTextField();
  JLabel jLabel6 = new JLabel();
  JTextField jTextField8 = new JTextField();
  JTextField jTextField1 = new JTextField();
  JTextField jTextField5 = new JTextField();
  JTextField jTextField11 = new JTextField();
  JTextField jTextField4 = new JTextField();
  JLabel jLabel5 = new JLabel();
  JLabel jLabel9 = new JLabel();
  JPanel jPanel2 = new JPanel();
  JPanel jPanel3 = new JPanel();
  JTable jTable1 = new JTable();
  JLabel jLabel10 = new JLabel();

  public addTeacher() {
    try {
      jbInit();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  void jbInit() throws Exception {
    this.getContentPane().setLayout(null);
    jPanel1.setBackground(SystemColor.controlLtHighlight);
    jPanel1.setBounds(new Rectangle(36, 63, 428, 162));
    jPanel1.setLayout(null);
    jLabel8.setBounds(new Rectangle(282, 106, 137, 17));
    jLabel8.setText("Heures de travaille");
    jLabel4.setBounds(new Rectangle(2, 49, 63, 17));
    jLabel4.setText("Addresse");
    jTextField6.setBounds(new Rectangle(0, 64, 191, 22));
    jTextField6.setText("");
    //jButton2.addActionListener(new addTeacher_jButton2_actionAdapter(this));
    jTextField9.setText("");
    jTextField9.setBounds(new Rectangle(327, 74, 36, 22));
    jTextField10.setBounds(new Rectangle(0, 123, 116, 22));
    jTextField10.setText("");
    jLabel1.setText("Prénom");
    jLabel1.setBounds(new Rectangle(0, 1, 63, 17));
    jTextField7.setText("");
    jTextField7.setBounds(new Rectangle(271, 74, 24, 22));
    jLabel3.setText("Date de Naissance");
    jLabel3.setBounds(new Rectangle(272, 1, 122, 17));
    jTextField12.setText("");
    jTextField12.setBounds(new Rectangle(278, 126, 116, 22));
    jLabel7.setBounds(new Rectangle(147, 107, 63, 17));
    jLabel7.setRequestFocusEnabled(true);
    jLabel7.setText("Salaire");
    jTextField3.setText("");
    jTextField3.setBounds(new Rectangle(270, 23, 24, 22));
    jLabel2.setBounds(new Rectangle(140, 0, 63, 17));
    jLabel2.setText("Nom");
    jTextField2.setBounds(new Rectangle(138, 22, 116, 22));
    jTextField2.setText("");
    //jButton1.addActionListener(new addTeacher_jButton1_actionAdapter(this));
    jLabel6.setText("Téléphone");
    jLabel6.setBounds(new Rectangle(0, 100, 63, 17));
    jTextField8.setText("");
    jTextField8.setBounds(new Rectangle(299, 74, 24, 22));
    jTextField1.setText("");
    jTextField1.setBounds(new Rectangle(1, 21, 116, 22));
    jTextField5.setBounds(new Rectangle(324, 23, 40, 22));
    jTextField5.setText("");
    jTextField11.setText("");
    jTextField11.setBounds(new Rectangle(145, 126, 116, 22));
    jTextField4.setBounds(new Rectangle(297, 23, 24, 22));
    jTextField4.setText("");
    jLabel5.setBounds(new Rectangle(262, 54, 118, 17));
    jLabel5.setText("Date de recrutement");
    jLabel9.setToolTipText("");
    jLabel9.setIcon(new ImageIcon(addTeacher.class.getResource("ProfesseurView.png")));
    jLabel9.setText("");
    jLabel9.setBounds(new Rectangle(-7, 0, 495, 53));
    jPanel2.setBackground(SystemColor.controlLtHighlight);
    jPanel2.setBounds(new Rectangle(-7, 262, 502, 256));
    jPanel2.setLayout(null);
    jTable1.setAlignmentY((float) 0.5);
    jTable1.setBorder(BorderFactory.createLineBorder(Color.black));
    jTable1.setAutoCreateColumnsFromModel(true);
    jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
    jTable1.setCellSelectionEnabled(true);
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
    new Object [][] {
        {null, null, null, null, null, null},
        {null, null, null, null, null, null},
        {null, null, null, null, null, null},
        {null, null, null, null, null, null},
        {null, null, null, null, null, null},
        {null, null, null, null, null, null}
    },
    new String [] {
        "Prenom", "Nom","Salaire", "Date d'embauche", "Telephone", "address"}) {
    boolean[] canEdit = new boolean [] {
        false, false, false, false, false
    };

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
  });

    jLabel10.setIcon(new ImageIcon(addTeacher.class.getResource("professeurADD.png")));
    jLabel10.setText("");
    jLabel10.setBounds(new Rectangle(-1, 234, 531, 52));
    jPanel3.setBackground(SystemColor.controlLtHighlight);
    jPanel3.setBounds(new Rectangle(16, 63, 460, 106));
    jPanel3.setLayout(null);
    js.setBounds(new Rectangle(4, 12, 443, 100));
    this.getContentPane().setBackground(SystemColor.controlLtHighlight);
    jPanel1.add(jLabel1, null);
    jPanel1.add(jLabel3, null);
    jPanel1.add(jLabel2, null);
    jPanel1.add(jTextField2, null);
    jPanel1.add(jTextField1, null);
    jPanel1.add(jTextField5, null);
    jPanel1.add(jTextField4, null);
    jPanel1.add(jTextField3, null);
    jPanel1.add(jLabel4, null);
    jPanel1.add(jTextField6, null);
    jPanel1.add(jTextField8, null);
    jPanel1.add(jLabel5, null);
    jPanel1.add(jTextField7, null);
    jPanel1.add(jTextField9, null);
    jPanel1.add(jTextField11, null);
    jPanel1.add(jLabel6, null);
    jPanel1.add(jTextField10, null);
    jPanel1.add(jLabel7, null);
    jPanel1.add(jLabel8, null);
    jPanel1.add(jTextField12, null);
    this.getContentPane().add(jLabel9, null);
    this.getContentPane().add(jLabel10, null);
    this.getContentPane().add(jPanel2, null);
    jPanel2.add(jPanel3, null);
    jPanel3.add(js, null);
    js.getViewport().add(jTable1, null);
    js.setViewportView(jTable1);
    this.getContentPane().add(jPanel1, null);
  }

  void jButton2_actionPerformed(ActionEvent e) {
    jTextField1.setText("");
    jTextField2.setText("");
    jTextField3.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
    jTextField6.setText("");
    jTextField7.setText("");
    jTextField8.setText("");
    jTextField9.setText("");
    jTextField10.setText("");
    jTextField11.setText("");
    jTextField12.setText("");
  }
 void Delete(){
   if(lists.size() != 0 && jTable1.getSelectedRow()<lists.size()){
      lists.removeElementAt(jTable1.getSelectedRow());
      updateTable();
    }
    else
      JOptionPane.showMessageDialog(this, "veuillez selectionner un champs !!!");

 }
 void Add(){
   if ( jTextField1.getText().equals("") || jTextField2.getText().equals("") ||
        jTextField6.getText().equals("") || jTextField3.getText().equals("") ||
        jTextField4.getText().equals("") || jTextField5.getText().equals("") ||
        jTextField7.getText().equals("") || jTextField8.getText().equals("") ||
        jTextField9.getText().equals("") || jTextField10.getText().equals("")){
     JOptionPane.showMessageDialog(this, "veuillez remplir tous les champs requis !!!");
   }
   else{

     // if(jTextField3.getText().getClass());
     Teacher teacher = new Teacher();
     teacher.firstName = jTextField1.getText();
     teacher.lastName = jTextField2.getText();
     GregorianCalendar birthDate = new GregorianCalendar(Integer.parseInt(
         jTextField3.getText()), Integer.parseInt(jTextField4.getText()),
         Integer.parseInt(jTextField5.getText()));

     teacher.birthdate = birthDate;
     teacher.address = jTextField6.getText();
     teacher.phoneNumber = jTextField10.getText();
     teacher.salary = Integer.parseInt(jTextField11.getText());
     teacher.hoursWorked = Integer.parseInt(jTextField12.getText());
     GregorianCalendar hireDate = new GregorianCalendar(Integer.parseInt(
         jTextField7.getText()), Integer.parseInt(jTextField8.getText()),
         Integer.parseInt(jTextField9.getText()));
     teacher.setDateOfHire(hireDate);
     lists.add(teacher); //add teacher to the linked *list
     updateTable();
   }


 }
  void updateTable(){
      Object data[][] = new Object[lists.size()][6];
      String titles[] = { "Prenom", "Nom", "Salaire", "Date d'embauche", "Telephone", "addresse"};
      for (int i = lists.size() - 1; i  >= 0; i--){
        Teacher temp = (Teacher) lists.get(i);
        data[lists.size() - 1 - i][0] = temp.firstName ;
        data[lists.size() - 1 - i][1] = temp.lastName ;
        String temp2 = new String(temp.getDateOfHire().get(GregorianCalendar.DAY_OF_MONTH) + "/" +
                                  temp.getDateOfHire().get(GregorianCalendar.MONTH) + "/" +
                                  temp.getDateOfHire().get(GregorianCalendar.YEAR)
                                  );
        data[lists.size() - 1 - i][3] = temp2 ;
        data[lists.size() - 1 - i][4] = temp.getPhoneNumber() ;
        data[lists.size() - 1 - i][2] = new String (""+temp.getSalary()) ;
        data[lists.size() - 1 - i][5] = temp.getAddress() ;
            }
            mymodel ml = new mymodel (data, titles);
            jTable1.setModel(ml);
    }



  void jButton1_actionPerformed(ActionEvent e) {
    if ( jTextField1.getText().equals("") || jTextField2.getText().equals("") ||
         jTextField6.getText().equals("") || jTextField3.getText().equals("") ||
         jTextField4.getText().equals("") || jTextField5.getText().equals("") ||
         jTextField7.getText().equals("") || jTextField8.getText().equals("") ||
         jTextField9.getText().equals("") || jTextField10.getText().equals("")){
      JOptionPane.showMessageDialog(this, "veuillez remplir tous les champs requis !!!");
    }
    else{

      // if(jTextField3.getText().getClass());
      Teacher teacher = new Teacher();
      teacher.firstName = jTextField1.getText();
      teacher.lastName = jTextField2.getText();
      GregorianCalendar birthDate = new GregorianCalendar(Integer.parseInt(
          jTextField3.getText()), Integer.parseInt(jTextField4.getText()),
          Integer.parseInt(jTextField5.getText()));

      teacher.birthdate = birthDate;
      teacher.address = jTextField6.getText();
      teacher.phoneNumber = jTextField10.getText();
      teacher.salary = Integer.parseInt(jTextField11.getText());
      teacher.hoursWorked = Integer.parseInt(jTextField12.getText());
      GregorianCalendar hireDate = new GregorianCalendar(Integer.parseInt(
          jTextField7.getText()), Integer.parseInt(jTextField8.getText()),
          Integer.parseInt(jTextField9.getText()));
      teacher.setDateOfHire(hireDate);
      lists.add(teacher); //add teacher to the linked *list
      updateTable();
    }
  }

  void jButton3_actionPerformed(ActionEvent e) {
    if(lists.size() != 0 && jTable1.getSelectedRow()<lists.size()){
      lists.removeElementAt(jTable1.getSelectedRow());
      updateTable();
    }
    else
      JOptionPane.showMessageDialog(this, "veuillez selectionner un champs !!!");
  }

  void jTextField1(KeyEvent e) {
    char c = e.getKeyChar();
    //if (c != 910)
      if (!Character.isDigit(c))
        e.consume();
  }

}
